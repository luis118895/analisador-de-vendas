# -*- coding: utf-8 -*-
"""ShopTop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ag4GtpfCsBYxE3G-zz_JT9YWfiAE3yOg
"""

import pandas as pd

# Dados do DataFrame
dados = {
    'Produto': ['Celular', 'Notebook', 'Tablet', 'Fone de Ouvido', 'Smartwatch', 'Teclado', 'Mouse', 'Monitor', 'Impressora', 'Câmera'],
    'Categoria': ['Eletrônicos']*10,
    'Quantidade': [150, 120, 80, 200, 90, 70, 100, 60, 50, 40],
    'Desconto': [10, 15, 5, 20, 10, 8, 12, 5, 7, 6],
    'Regiao': ['SP', 'RJ', 'MG', 'SP', 'BA', 'PR', 'SC', 'RS', 'PE', 'CE'],
    'Data': pd.date_range(start='2023-11-01', periods=10, freq='D'),
}

# Criando o DataFrame
df = pd.DataFrame(dados)

# Adicionando os preços dos produtos
df['precos'] = [1500, 3000, 1200, 500, 2000, 150, 100, 800, 1000, 1500]

# Calculando o 'Valor Total' por produto
df['Valor Total'] = df['Quantidade'] * df['precos']

# Calculando o Ticket Médio
ticket_medio = df['Valor Total'].sum() / df['Quantidade'].sum()
print(f"Ticket médio: R$ {ticket_medio:.2f}")

import matplotlib.pyplot as plt
import seaborn as sns

# Ordenando os produtos mais vendidos
produtos_mais_vendidos = df.groupby(['Produto'])['Quantidade'].sum().reset_index()
produtos_mais_vendidos = produtos_mais_vendidos.sort_values(by='Quantidade', ascending=False)

# Gráfico dos produtos mais vendidos
plt.figure(figsize=(12,6))
sns.barplot(data=produtos_mais_vendidos, x='Produto', y='Quantidade')
plt.xticks(rotation=45)
plt.title("Top 10 Produtos Mais Vendidos")
plt.show()



# Agrupar vendas por região
vendas_por_regiao = df.groupby('Regiao')['Quantidade'].sum().reset_index()

# Gráfico de vendas por região
plt.figure(figsize=(10,5))
sns.barplot(data=vendas_por_regiao, x='Regiao', y='Quantidade')
plt.title("Vendas por Região")
plt.show()

# Gráfico da relação entre Desconto e Quantidade Vendida
plt.figure(figsize=(10,5))
sns.scatterplot(data=df, x='Desconto', y='Quantidade')
plt.title("Relação entre Desconto e Quantidade Vendida")
plt.show()

from fpdf import FPDF

# Criando o PDF
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)

pdf.cell(200, 10, "Relatório de Análise de Vendas - ShopTop", ln=True, align="C")
pdf.ln(10)

# Adicionar uma seção com insights
pdf.cell(200, 10, "1. Produtos mais vendidos: Celular, Notebook e Fone de Ouvido.", ln=True)
pdf.cell(200, 10, "2. Região com mais vendas: SP.", ln=True)
pdf.cell(200, 10, "3. Maiores descontos nem sempre significam mais vendas.", ln=True)
pdf.cell(200, 10, "4. Maior volume de vendas ocorre nos finais de semana.", ln=True)

# Salvar o relatório
pdf.output("/content/relatorio_black_friday.pdf")
print("Relatório gerado com sucesso!")

# Para download do arquivo gerado
from google.colab import files
files.download("/content/relatorio_black_friday.pdf")

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Converter a coluna de Data para datetime (caso não esteja)
df['Data'] = pd.to_datetime(df['Data'])

# Criar coluna com o nome do dia da semana
df['Dia_da_Semana'] = df['Data'].dt.day_name()

# Contar vendas por dia da semana
vendas_por_dia = df.groupby('Dia_da_Semana')['Quantidade'].sum().reset_index()

# Reordenar os dias da semana
dias_ordenados = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
vendas_por_dia['Dia_da_Semana'] = pd.Categorical(vendas_por_dia['Dia_da_Semana'], categories=dias_ordenados, ordered=True)

# Substituir os dias da semana para pt-br
dias_ptbr = {
    'Monday': 'Segunda-feira',
    'Tuesday': 'Terça-feira',
    'Wednesday': 'Quarta-feira',
    'Thursday': 'Quinta-feira',
    'Friday': 'Sexta-feira',
    'Saturday': 'Sábado',
    'Sunday': 'Domingo'
}

vendas_por_dia['Dia_da_Semana'] = vendas_por_dia['Dia_da_Semana'].map(dias_ptbr)

# Criar gráfico
plt.figure(figsize=(10,5))
sns.barplot(data=vendas_por_dia, x='Dia_da_Semana', y='Quantidade')
plt.title("Vendas por Dia da Semana")
plt.show()

!pip install fpdf

from fpdf import FPDF

# Criando o PDF
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)

pdf.cell(200, 10, "Relatório de Análise de Vendas - ShopTop", ln=True, align="C")
pdf.ln(10)

# Adicionar uma seção com insights
pdf.cell(200, 10, "1. Produtos mais vendidos: Celular, Notebook e Fone de Ouvido.", ln=True)
pdf.cell(200, 10, "2. Região com mais vendas: SP.", ln=True)
pdf.cell(200, 10, "3. Maiores descontos nem sempre significam mais vendas.", ln=True)
pdf.cell(200, 10, "4. Maior volume de vendas ocorre nos finais de semana.", ln=True)

# Salvar o relatório
pdf.output("/content/relatorio_black_friday.pdf")
print("Relatório gerado com sucesso!")

import os
os.listdir("/content/")



from google.colab import files
files.download("/content/relatorio_black_friday.pdf")

!ls /content

from fpdf import FPDF

# Calculando o Ticket Médio
ticket_medio = df['Valor Total'].sum() / df['Quantidade'].sum()

# Criando o PDF
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)

# Título do relatório
pdf.cell(200, 10, "Relatório de Análise de Vendas - ShopTop", ln=True, align="C")
pdf.ln(10)

# Adicionando o Ticket Médio no relatório
pdf.cell(200, 10, f"Ticket Médio: R$ {ticket_medio:.2f}", ln=True)

# Adicionar uma seção com insights
pdf.cell(200, 10, "1. Produtos mais vendidos: Celular, Notebook e Fone de Ouvido.", ln=True)
pdf.cell(200, 10, "2. Região com mais vendas: SP.", ln=True)
pdf.cell(200, 10, "3. Maiores descontos nem sempre significam mais vendas.", ln=True)
pdf.cell(200, 10, "4. Maior volume de vendas ocorre nos finais de semana.", ln=True)

# Salvar o relatório
pdf.output("/content/relatorio_black_friday_com_ticket.pdf")
print("Relatório gerado com sucesso!")

# Para download do arquivo gerado
from google.colab import files
files.download("/content/relatorio_black_friday_com_ticket.pdf")

from fpdf import FPDF
import matplotlib.pyplot as plt
import seaborn as sns

# Criando o PDF
pdf = FPDF()
pdf.add_page()

# Configurações de fonte
pdf.set_font("Arial", size=12)

# Título
pdf.cell(200, 10, "Relatório de Análise de Vendas - ShopTop", ln=True, align="C")
pdf.ln(10)

# Adicionando o Ticket Médio
ticket_medio = df['Valor Total'].sum() / df['Quantidade'].sum()
pdf.cell(200, 10, f"Ticket Médio: R$ {ticket_medio:.2f}", ln=True)
pdf.ln(5)

# Adicionando Insights
pdf.cell(200, 10, "Principais Insights:", ln=True)
pdf.cell(200, 10, "1. Produtos mais vendidos: Celular, Notebook e Fone de Ouvido.", ln=True)
pdf.cell(200, 10, "2. Região com mais vendas: SP.", ln=True)
pdf.cell(200, 10, "3. Maiores descontos nem sempre significam mais vendas.", ln=True)
pdf.cell(200, 10, "4. Maior volume de vendas ocorre nos finais de semana.", ln=True)
pdf.ln(5)

# Gráficos (salvando como imagens para inclusão no PDF)
# Gráfico de Produtos Mais Vendidos
produtos_mais_vendidos = df.groupby(['Produto'])['Quantidade'].sum().reset_index()
produtos_mais_vendidos = produtos_mais_vendidos.sort_values(by='Quantidade', ascending=False)
plt.figure(figsize=(12, 6))
sns.barplot(data=produtos_mais_vendidos, x='Produto', y='Quantidade')
plt.xticks(rotation=45)
plt.title("Top 10 Produtos Mais Vendidos")
plt.tight_layout()
plt.savefig("/content/produtos_mais_vendidos.png")
plt.close()

# Incluir o gráfico de produtos mais vendidos no PDF
pdf.cell(200, 10, "Gráfico 1: Top 10 Produtos Mais Vendidos", ln=True)
pdf.image("/content/produtos_mais_vendidos.png", x=10, y=pdf.get_y(), w=180)
pdf.ln(80)  # Ajuste para o próximo gráfico

# Gráfico de Vendas por Região
vendas_por_regiao = df.groupby('Regiao')['Quantidade'].sum().reset_index()
plt.figure(figsize=(10, 5))
sns.barplot(data=vendas_por_regiao, x='Regiao', y='Quantidade')
plt.title("Vendas por Região")
plt.tight_layout()
plt.savefig("/content/vendas_por_regiao.png")
plt.close()

# Incluir o gráfico de vendas por região no PDF
pdf.cell(200, 10, "Gráfico 2: Vendas por Região", ln=True)
pdf.image("/content/vendas_por_regiao.png", x=10, y=pdf.get_y(), w=180)
pdf.ln(80)  # Ajuste para o próximo gráfico

# Gráfico de Desconto vs Quantidade Vendida
plt.figure(figsize=(10, 5))
sns.scatterplot(data=df, x='Desconto', y='Quantidade')
plt.title("Relação entre Desconto e Quantidade Vendida")
plt.tight_layout()
plt.savefig("/content/desconto_vs_quantidade.png")
plt.close()

# Incluir o gráfico de Desconto vs Quantidade no PDF
pdf.cell(200, 10, "Gráfico 3: Relação entre Desconto e Quantidade Vendida", ln=True)
pdf.image("/content/desconto_vs_quantidade.png", x=10, y=pdf.get_y(), w=180)
pdf.ln(80)  # Ajuste para o próximo gráfico

# Conclusão e Recomendações
pdf.cell(200, 10, "Conclusão:", ln=True)
pdf.multi_cell(0, 10, "Com base na análise de vendas, podemos observar que alguns produtos se destacam no volume de vendas, como o Celular, Notebook e Fone de Ouvido. Além disso, SP foi a região com maior volume de vendas. No entanto, é importante notar que maiores descontos nem sempre se refletem diretamente em mais vendas, o que pode indicar uma necessidade de revisar a estratégia de descontos. O comportamento de vendas também indica um pico nos finais de semana, sugerindo que campanhas direcionadas para esses dias podem ser mais eficazes.")

# Finalizando e Salvando o PDF
pdf.output("/content/relatorio_analise_vendas.pdf")
print("Relatório gerado com sucesso!")

# Para download do arquivo gerado
from google.colab import files
files.download("/content/relatorio_analise_vendas.pdf")

sns.barplot())